import React, { useState, useEffect } from "react";
import { API_BASE } from "./api";   // üëâ import ƒë∆∞·ªùng d·∫´n API
import "./BookForm.css"; // ‚Üê CSS ri√™ng c·ªßa b·∫°n

function BookAnAppointment({ onClose }) {
  const [form, setForm] = useState({
    name: "",
    phone: "",
    address: "",
    note: "",
  });

  useEffect(() => {
    console.log("üìå Form ƒë√£ hi·ªÉn th·ªã");
    return () => console.log("üìå Form ƒë√£ b·ªã ·∫©n");
  }, []);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    console.log("üì§ G·ª≠i d·ªØ li·ªáu:", form);

    try {
      const res = await fetch(`${API_BASE}/api/appointments`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(form),
      });

      if (res.ok) {
        alert("‚úÖ G·ª≠i th√†nh c√¥ng!");
        setForm({ name: "", phone: "", address: "", note: "" });
        onClose();
      } else {
        const err = await res.json();
        alert("‚ùå L·ªói: " + (err.message || "Kh√¥ng g·ª≠i ƒë∆∞·ª£c"));
      }
    } catch (err) {
      console.error("‚ùå L·ªói g·ª≠i form", err);
      alert("Kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c server");
    }
  };

  return (
    <div className="overlay">
      <form onSubmit={handleSubmit} className="book-form">
        <button
          type="button"
          className="form-close"
          onClick={onClose}
          aria-label="Close"
        >
          ‚úï
        </button>

        <h2 className="form-title">ƒê·∫∑t l·ªãch kh√°m</h2>

        <input
          type="text"
          name="name"
          placeholder="H·ªç v√† t√™n"
          value={form.name}
          onChange={handleChange}
          required
        />
        <input
          type="text"
          name="phone"
          placeholder="S·ªë ƒëi·ªán tho·∫°i"
          value={form.phone}
          onChange={handleChange}
          required
        />
        <input
          type="text"
          name="address"
          placeholder="ƒê·ªãa ch·ªâ"
          value={form.address}
          onChange={handleChange}
        />
        <textarea
          name="note"
          placeholder="Ghi ch√∫"
          value={form.note}
          onChange={handleChange}
        />

        <button type="submit" className="form-submit">
          G·ª≠i th√¥ng tin
        </button>
      </form>
    </div>
  );
}

export default BookAnAppointment;
